
* Image Acquisition 01: Code generated by Image Acquisition 01
list_files ('D:/口红缺陷检测/sample_pic/NG', ['files','follow_links'], ImageFiles)
tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)
for Index := 0 to |ImageFiles| - 1 by 1
    read_image (Image, ImageFiles[Index])
    * Image Acquisition 01: Do something
    dev_close_window()
    dev_open_window (0, 0, 512, 512, 'black', WindowHandle)
    set_display_font(WindowHandle, 30, 'mono', 'true', 'false')
    
*    read_image (Image, 'D:/口红缺陷检测/sample_pic/NG/5_1.bmp')
    dev_display (Image)
    
    threshold (Image, Regions, 8, 249)
    connection (Regions, ConnectedRegions)
    
    select_shape (ConnectedRegions, SelectedRegions, ['roundness','area'], 'and', [0.7387,12585], [1,200000])
    *select_shape (ConnectedRegions, SelectedRegions, ['roundness','area'], 'and', [0.7,53005.5], [12585.03,200000.])
    closing_circle (SelectedRegions, RegionClosing, 5)
    reduce_domain (Image, RegionClosing, ImageReduced)
    threshold (ImageReduced, Regions1, 23, 231)
    connection (Regions1, ConnectedRegions1)
    opening_circle (ConnectedRegions1, RegionOpening, 7)
    connection (RegionOpening, ConnectedRegions2)
    select_shape (ConnectedRegions2, SelectedRegions1, 'area', 'and', 15619.3, 44581.1)
    fill_up (SelectedRegions1, RegionFillUp)
    smallest_circle (RegionFillUp, Row1, Column1, Radius1)
    gen_circle(Circle1, Row1, Column1, Radius1)
    *为了找倒角
    reduce_domain (ImageReduced, Circle1, ImageReduced2)
    scale_image_max (ImageReduced2, ImageScaleMax)
    emphasize (ImageScaleMax, ImageEmphasize, 7, 7, 1)
    gauss_filter (ImageEmphasize, ImageGauss, 5)
    dual_threshold (ImageGauss, RegionCrossings, 1, 210, 210)
    union1 (RegionCrossings, RegionUnion)
    opening_circle (RegionUnion, RegionOpening1, 1)
    *union1 (RegionCrossings, RegionUnion)
    closing_circle (RegionOpening1, RegionClosing1, 25)
    
    select_shape (RegionClosing1, SelectedRegions2, 'contlength', 'and', 262.669, 1000)
    *select_shape (RegionClosing1, SelectedRegions2, ['contlength','roundness'], 'and', [344.512, 0],[1000,0.5])
*    select_shape (RegionClosing1, SelectedRegions2, 'convexity', 'and', 0.1331, 0.2)
    
    
*    smallest_circle (RegionClosing1, Row, Column, Radius)
*    gen_contour_region_xld (RegionClosing1, Contours, 'border')
*    fit_circle_contour_xld (Contours, 'algebraic', -1, 0, 0, 3, 2, Row, Column, Radius, StartPhi, EndPhi, PointOrder)
    count_obj(SelectedRegions2, Number)
    dev_display(Image)
    disp_message (WindowHandle, |ImageFiles| + '-'+Index, 'image', 800, 12, 'yellow', 'true')
    if (Number > 0)
        disp_message (WindowHandle, '有倒角', 'image', 12, 12, 'green', 'false')
    else
        disp_message (WindowHandle, '无倒角', 'image', 12, 12, 'red', 'false')
    endif
endfor


* var_threshold (ImageScaleMax, Region, 10, 10, 0.2, 10, 'dark')
*gauss_filter (ImageReduced2, ImageGauss, 5)
*dyn_threshold (ImageReduced2, ImageGauss, RegionDynThresh, 10 , 'dark')
